# This workflow will install Python dependencies, publish package to internal PDBe
# PyPi and generate documentation.

name: PDBe graph queries documentation

env:
  PACKAGE_NAME: pdbequeries

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  build:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Set up python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Create distribution
        if: github.ref == 'refs/heads/main'
        run: |
          pip install wheel
          python setup.py sdist bdist_wheel

      - name: Upload artifact for publish job
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PACKAGE_NAME }}
          path: dist/

  publish:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v2
      with:
        persist-credentials: false

    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: ${{ env.PACKAGE_NAME }}
        path: dist/
    - name: Publish to internal PyPi
      run: |
        pip install twine
        TWINE_PASSWORD=${{ secrets.TWINE_PASSWORD }} TWINE_USERNAME=${{ secrets.TWINE_USERNAME }} python -m twine upload --repository-url ${{ secrets.PIP_INDEX_URL }} dist/*
      continue-on-error: false

    - name: Create documentation
      run: |
        pip install -e ".[docs]"
        make html

    - name: Deploy pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./build/html
